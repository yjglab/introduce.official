generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  provider       Provider
  providerId     String?
  id             Int           @id @default(autoincrement())
  email          String        @unique
  displayName    String        @unique
  password       String
  position       String
  role           UserRole?
  accountStatus  AccountStatus @default(pending)
  avatar         String?       @default("")
  projects       UserProject[]
  likedProjects  UserProject[] @relation("UserLikedProjects")
  markedProjects UserProject[] @relation("UserMarkedProjects")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now())
}

model UserProject {
  id          Int            @id @default(autoincrement())
  category    String
  title       String
  description String
  source      ProjectSource?
  grades      Float          @default(0)
  skills      String[]
  likers      User[]         @relation("UserLikedProjects")
  markers     User[]         @relation("UserMarkedProjects")
  sections    Section[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  user        User           @relation(fields: [userId], references: [id])
  userId      Int
}

model Section {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  images      String[]
  keywords    Keyword[]
  project     UserProject @relation(fields: [projectId], references: [id])
  projectId   Int
}

model Keyword {
  id        Int     @id @default(autoincrement())
  name      String
  image     String
  section   Section @relation(fields: [sectionId], references: [id])
  sectionId Int
}

model ProjectSource {
  id        Int         @id @default(autoincrement())
  name      String
  link      String
  owner     String
  project   UserProject @relation(fields: [projectId], references: [id])
  projectId Int         @unique
}

model UserRole {
  id     Int       @id @default(autoincrement())
  name   Role      @default(user)
  expiry DateTime?
  user   User      @relation(fields: [userId], references: [id])
  userId Int       @unique
}

enum Role {
  user
  pro
  expoert
  manager
  admin
}

enum Provider {
  local
  google
  facebook
  kakao
}

enum AccountStatus {
  pending
  verified
  banned
}
