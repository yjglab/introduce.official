generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  provider      Provider?
  providerId    String?
  id            Int           @id @default(autoincrement())
  email         String        @unique @db.VarChar(300)
  nickname      String        @unique
  password      String        @db.VarChar(300)
  position      String
  class         UserClass     @default(normal)
  role          UserRole      @default(user)
  accountStatus AccountStatus @default(pending)

  projectPosts ProjectPost[]
  findingPosts FindingPost[]

  likedProjectPosts ProjectPost[] @relation("UserLikedProjectPosts")
  likedFindingPosts FindingPost[] @relation("UserLikedFindingPosts")

  markedProjectPosts ProjectPost[] @relation("UserMarkedProjectPosts")
  markedFindingPosts FindingPost[] @relation("UserMarkedFindingPosts")

  createdAt DateTime @default(now())
}

model ProjectPost {
  id          Int                  @id @default(autoincrement())
  category    String
  title       String
  description String
  source      ProjectSource?
  grades      Float                @default(0)
  user        User                 @relation(fields: [userId], references: [id])
  userId      Int
  skills      String[]
  likers      User[]               @relation("UserLikedProjectPosts")
  markers     User[]               @relation("UserMarkedProjectPosts")
  sections    ProjectPostSection[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectSource {
  id     Int         @id @default(autoincrement())
  name   String
  link   String
  owner  String
  post   ProjectPost @relation(fields: [postId], references: [id])
  postId Int         @unique
}

model FindingPost {
  id          Int                  @id @default(autoincrement())
  category    String
  title       String
  description String
  deadline    String
  user        User                 @relation(fields: [userId], references: [id])
  userId      Int
  skills      String[]
  likers      User[]               @relation("UserLikedFindingPosts")
  markers     User[]               @relation("UserMarkedFindingPosts")
  sections    FindingPostSection[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectPostSection {
  id          Int         @id @default(autoincrement())
  header      String
  description String
  images      String[]
  post        ProjectPost @relation(fields: [postId], references: [id])
  postId      Int
}

model FindingPostSection {
  id          Int         @id @default(autoincrement())
  header      String
  description String
  images      String[]
  post        FindingPost @relation(fields: [postId], references: [id])
  postId      Int
}

enum UserClass {
  normal
  pro
}

enum UserRole {
  user
  premium
  moderator
  admin
}

enum Provider {
  google
  facebook
  local
}

enum AccountStatus {
  pending
  verified
  banned
}
