generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  provider      Provider
  providerId    String?
  id            String            @id
  email         String            @unique
  displayName   String            @unique
  password      String
  position      String
  about         String            @default("")
  plan          UserPlan          @default(user)
  planExpiry    DateTime?
  accountStatus AccountStatus     @default(pending)
  avatar        String?           @default("")
  Projects      UserProject[]
  LikedProjects UserProjectLike[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @default(now())
}

model UserProject {
  projectId   String            @id
  category    String
  title       String
  subTitle    String
  thumbnail   String
  description String
  Source      ProjectSource?
  grades      Float             @default(0)
  skills      String[]
  Likers      UserProjectLike[]
  Sections    Section[]
  private     Boolean           @default(false)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  User        User              @relation(fields: [userId], references: [id])
  userId      String
}

model UserProjectLike {
  userId      String
  projectId   String
  User        User        @relation(fields: [userId], references: [id])
  UserProject UserProject @relation(fields: [projectId], references: [projectId])
  createdAt   DateTime    @default(now())

  @@id([projectId, userId])
}

model Section {
  sectionId   String         @id
  name        String
  description String
  Images      SectionImage[]
  Keywords    Keyword[]
  Project     UserProject    @relation(fields: [projectId], references: [projectId])
  projectId   String
}

model SectionImage {
  src       String
  alt       String
  Section   Section @relation(fields: [sectionId], references: [sectionId])
  sectionId String

  @@id([sectionId, src])
}

model Keyword {
  keywordId String  @id
  name      String
  image     Json // { src, alt }
  Section   Section @relation(fields: [sectionId], references: [sectionId])
  sectionId String

  // @@id
}

model ProjectSource {
  link      String      @id
  name      String
  owner     String
  Project   UserProject @relation(fields: [projectId], references: [projectId])
  projectId String      @unique
}

enum UserPlan {
  user
  pro
  expert
  manager
  admin
}

enum Provider {
  local
  google
  facebook
  kakao
}

enum AccountStatus {
  pending
  verified
  banned
}
